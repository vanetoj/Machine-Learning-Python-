Vania Todorova
LAB 1

Exercise 1
"""in this exercise we are establishing a password for a user . I used the function valid_password for this program."""
def valid_password(p):
"The first loop has to do with the length if the password - if it is between 6-16 characters ."
if (len(p)<6 or len(p)>16:
	print("The password should be in range 6-16 characters.")
	return False

"This iterration is using the Python function isdigit() to check if there is a digit in the password."  
	hasDigit=False
	for ch in p:
		if ch.isdigit():
		hasDigit=True
	if (not hasDigit):
		print("The password should have at least one number.")
		return False
"This loop is checkin to see if they are special characters in the passowrd."

	hasSpecial=False
	for ch in p:
		for test in "$@!*":
			if ch==test:
				hasSpecial=True

	if (not hasSpecial):
		print(" The password should has at least one special character.")
		return False

	hasUpper=False
	hasLower=False
"This iterration is checking to see if there are both lower and upper characters in the password."

	for ch in p:
		if ch.islower():
			hasLower=True
		if ch.isupper():
			hasUpper=True
	if (not hasUpper and not hasLower):
		print("The passowrd should have at least one lower and one upper character.")
		return False
"If all if the previoues loops are true then it will print that is valid."

	print ("Password is valid")
	return True


Exercise 2
"In this program we find the middle word , the longest word and revere the words in a sentence."
"First we import the math module because we are going to use the math funtion -floor which one two numbers divided returns the lower one."
import math

def sentence():
"We take the input from the user and split the words with the split() funtion."
	words=input("Enter a sentence: ").split()

"Then we divide the number if words to two and if the remainder is equal to zero then we get two middle words:the one that is in the top in the middle and the one that is in the bottom half."
	if len(words)%2==0:
		middle=words[math.floor(len(words)/2)-1:len(words)//2+1]
	
"Otherwise if the number is odd we just get the middle word +1."
	else:
		middle=words[len(words)//2:len(words)//2+1]

	print("Middle words are: [", ','.join(middle), ']')

	longest= words[0]
"Here we iterrate trough the input to find the longest word using the len() functioin of Python."
	for word in words;
		if len(word)>len(longest):
			longest=word

	print("Longest word is", longest)
	
"We use the reverse() function to reverse the words in the sentence."
	reverse_words=[]

	
	for word in words:
		reverse_words.append(word.[::1])

	print("Sentence with reverse wirds is: ", ''.join(reverse_words))

sentence()

Exercise 3
"In this exercise we are trying to find 3 numbers the sum of which equals zero."

def triplets(list):
	res=[]
"We iterrate with 3 different variables through the list as we compare the first variable with all of the remaning  numbers in the list through the second itteration and then the same with the remaining numbers through the third iterration. "
	for i in range(len(list)):
		for j in range(i+1, len(list)):
			for k in range(j+1,len(list)):
"if the sum of all three iterrators is equal to 0 we add the 3 numbers to a list'"
				if (list[i]+list[j]+list[k]==0):
					res.append([list[i], list[j], list[k]])
	print(res)
"Calling the method with these numbers"
triplets([1,3,6,2,-1,2,8,-2,9,-7])


Exercise 4
"In this exercise we find which students attend both class and which not. We first create two lists of students."
classPython=["andrew","peter","ana"]
classWebApp=["andrew","ana","kate"]
all =classWebApp+classPython
"we create an empty list to add students who attend both classes."
bothClasses=[]
"We iterrate through both lists and compare if the elements are the same we use the append function to add them to the list of people who attend both classes."
for i in classPython:
	for j in classWEbApp:
		if i==j:
 			bothClasses.append(i)
"Here we iterrate through both lists again to remove the repeating elements in both lists from the summation of both lists."
for i in all:
	for j in bothClasses:
		if i==j:
			all.remove(i)
			all.remove(j)
print("The students who attend both classes are: ", ','.join(bothClasses))
print("The student who dont attend both classes are: ",','.join(all))
